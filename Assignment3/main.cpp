#include <cstdio>
#include "pico/stdlib.h"
#include "hardware/i2c.h"
#include "ssd1306.h"

#define BUFFER_SIZE 64
// LEDs
#define LED_D3 20
#define LED_D2 21
#define LED_D1 22
// I2C1
#define I2C_SDA 14
#define I2C_SCL 15
#define BAUD_RATE 400000

/* Some drawings */
static const unsigned char Nadim_drawing[] = {
        // font edit begin : monovlsb : 39 : 39 : 39
        0xFF, 0x07, 0x03, 0x03, 0x03, 0x03, 0x03, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC3, 0xFF,
        0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x30,
        0x18, 0x08, 0x08, 0x08, 0x18, 0x30, 0xE0, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0xF0, 0x10, 0x10, 0x08, 0x08, 0x08, 0x08, 0x08,
        0x18, 0xF0, 0xC0, 0x00, 0x00, 0xFF, 0xFF, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x02, 0x02,
        0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
        0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
        0x03, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x0C, 0x38, 0x60, 0xC0, 0x80, 0x80, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
        0x80, 0xC0, 0x40, 0x20, 0x08, 0x08, 0x00, 0x00,
        0x00, 0x00, 0x00, 0xFF, 0x7F, 0xF0, 0x40, 0x40,
        0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC0, 0xC0,
        0xE0, 0xE0, 0x60, 0x40, 0xC0, 0xC0, 0x81, 0x83,
        0x82, 0x82, 0x82, 0x82, 0x83, 0x81, 0x81, 0x80,
        0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x40, 0x40,
        0x40, 0x40, 0xBD
        // font edit end
};

static const unsigned char Tapio_kissu[] = {
        // font edit begin : monovlsb : 39 : 39 : 39
        0xFF, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0xE1, 0xE1, 0x81, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x81, 0xE1, 0x21, 0xC1, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xFF, 0xFF,
        0x00, 0x00, 0x00, 0x80, 0x60, 0x10, 0x1C, 0x07,
        0x01, 0x00, 0x01, 0x0E, 0x18, 0x18, 0x08, 0x08,
        0x08, 0x08, 0x08, 0x18, 0x10, 0x18, 0x0C, 0x07,
        0x01, 0x00, 0x00, 0x0F, 0x18, 0x30, 0x20, 0x60,
        0xC0, 0x80, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00,
        0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C,
        0x3E, 0x3E, 0x3E, 0x3E, 0x1C, 0x80, 0x80, 0x80,
        0x80, 0x80, 0x00, 0x1C, 0x3E, 0x3E, 0x3E, 0x3E,
        0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x03, 0x0E, 0xF8, 0x00, 0xFF, 0xFF, 0x00, 0x03,
        0x0E, 0x18, 0x30, 0x60, 0x40, 0xC0, 0x80, 0x80,
        0x04, 0x08, 0x08, 0x10, 0x10, 0x11, 0x0B, 0x11,
        0x10, 0x10, 0x10, 0x08, 0x04, 0x00, 0x00, 0x00,
        0x80, 0x80, 0x40, 0x40, 0x20, 0x10, 0x08, 0x04,
        0x02, 0x01, 0x00, 0xFF, 0x7F, 0x40, 0x40, 0x40,
        0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x41, 0x41,
        0x41, 0x41, 0x41, 0x43, 0x42, 0x42, 0x42, 0x42,
        0x42, 0x42, 0x42, 0x42, 0x42, 0x43, 0x41, 0x41,
        0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
        0x40, 0x40, 0x7F
        // font edit end
};

int main() {

    /* Buffer for elapsed time */
    char msg_buffer[BUFFER_SIZE];

    /* Initialize LED pin */
    gpio_init(LED_D3);
    gpio_set_dir(LED_D3, GPIO_OUT);
    gpio_init(LED_D2);
    gpio_set_dir(LED_D2, GPIO_OUT);
    gpio_init(LED_D1);
    gpio_set_dir(LED_D1, GPIO_OUT);

    /* Initialize I2C */
    i2c_init(i2c1, BAUD_RATE);
    gpio_set_function(I2C_SCL, GPIO_FUNC_I2C);
    gpio_set_function(I2C_SDA, GPIO_FUNC_I2C);
    ssd1306 display(i2c1);

    /* Initialize chosen serial port */
    stdio_init_all();

    /* Start the time */
    uint64_t start_time = time_us_64();

    /* Clears OLED */
    display.fill(0);
    display.show();

    /* Loop forever */
    while (true) {
        /* Blink LEDs */
        for (uint8_t i = 7; i >= 0; i--) {
            /* Blink LEDs */
            uint8_t led_state = i & 0x01;           // Mask to get 1st LSB (masking)
            gpio_put(LED_D1, led_state);            // D1 blinks 4 times per second

            led_state = i & 0x02;                   // Mask to get 2nd LSB
            gpio_put(LED_D2, led_state);            // D2 blinks 2 times per second

            led_state = i & 0x04;                   // Mask to get 3rd LSB
            gpio_put(LED_D3, led_state);            // D3 blinks 1 time per second
            sleep_ms(125);

            /* Calculate passed time */
            uint64_t current_time = time_us_64();
            uint64_t elapsed_seconds = (current_time - start_time) / 1e6;
            sprintf(msg_buffer, "Time: %llu s", elapsed_seconds);

            /* Update OLED */
            display.fill(0);
            display.text(msg_buffer, 0, 0);         // Display elapsed time

            mono_vlsb rb(Tapio_kissu, 39, 39);      // Display drawing: Nadim_drawing or Tapio_kissu
            display.blit(rb, 16, 16);               // Set position for drawing
            display.show();
        }
    }
    return 0 ;
}
